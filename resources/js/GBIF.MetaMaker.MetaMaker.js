/*
 * MetaMaker
 * Copyright(c) 2010, SilverBiology.
 * 
 * This code is licensed under Apache License 2.0. Use it as you wish, but keep this copyright intact.
 * Source found at: http://code.google.com/p/gbif-meta-maker/
 */


Ext.namespace('Ext.ux.dd');Ext.ux.dd.GridReorderDropTarget=function(grid,config){this.target=new Ext.dd.DropTarget(grid.getEl(),{ddGroup:grid.ddGroup||'GridDD',grid:grid,gridDropTarget:this,notifyDrop:function(dd,e,data){var t=Ext.lib.Event.getTarget(e);var rindex=this.grid.getView().findRowIndex(t);if(rindex===false)return false;if(rindex==data.rowIndex)return false;if(this.gridDropTarget.fireEvent(this.copy?'beforerowcopy':'beforerowmove',this.gridDropTarget,data.rowIndex,rindex,data.selections)===false)return false;var ds=this.grid.getStore();if(!this.copy){for(i=0;i<data.selections.length;i++){ds.remove(ds.getById(data.selections[i].id));}}
ds.insert(rindex,data.selections);var sm=this.grid.getSelectionModel();if(sm)sm.selectRecords(data.selections);this.gridDropTarget.fireEvent(this.copy?'afterrowcopy':'afterrowmove',this.gridDropTarget,data.rowIndex,rindex,data.selections);return true;},notifyOver:function(dd,e,data){var t=Ext.lib.Event.getTarget(e);var rindex=this.grid.getView().findRowIndex(t);if(rindex==data.rowIndex)rindex=false;return(rindex===false)?this.dropNotAllowed:this.dropAllowed;}});if(config){Ext.apply(this.target,config);if(config.listeners)Ext.apply(this,{listeners:config.listeners});}
this.addEvents({"beforerowmove":true,"afterrowmove":true,"beforerowcopy":true,"afterrowcopy":true});Ext.ux.dd.GridReorderDropTarget.superclass.constructor.call(this);};Ext.extend(Ext.ux.dd.GridReorderDropTarget,Ext.util.Observable,{getTarget:function(){return this.target;},getGrid:function(){return this.target.grid;},getCopy:function(){return this.target.copy?true:false;},setCopy:function(b){this.target.copy=b?true:false;}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.Center=function(config){this.metaMakerCenterTab=new GBIF.MetaMaker.CenterTab({region:'center'});this.extensionsTree=new GBIF.MetaMaker.ExtensionsTree({region:'west',width:250,minWidth:250,maxWidth:250,split:true,listeners:{dblclick:this.loadExtension,checkchange:this.checkchange,click:this.activateTab,scope:this}},this);Ext.apply(this,config,{layout:'border',defaults:{border:false},items:[this.extensionsTree,this.metaMakerCenterTab]});GBIF.MetaMaker.Center.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.Center,Ext.Panel,{loadExtension:function(node){},activateTab:function(node){if(this.metaMakerCenterTab.findById("ext-"+node.id)){this.metaMakerCenterTab.setActiveTab("ext-"+node.id);}},checkchange:function(node,state){switch(node.attributes.type){case'core':var previousCoreItem=this.extensionsTree.toggleCore(node.id);this.metaMakerCenterTab.hideTabStripItem("core-"+previousCoreItem);this.metaMakerCenterTab.getComponent("core-"+previousCoreItem).skip=true;this.metaMakerCenterTab.unhideTabStripItem("core-"+node.id);this.metaMakerCenterTab.getComponent("core-"+node.id).skip=false;this.metaMakerCenterTab.setActiveTab("core-"+node.id);node.expand();break;case'extension':if(state){if(this.metaMakerCenterTab.findById("extension-"+node.id)){this.metaMakerCenterTab.unhideTabStripItem("extension-"+node.id);this.metaMakerCenterTab.getComponent("extension-"+node.id).skip=false;this.metaMakerCenterTab.setActiveTab("extension-"+node.id);}else{this.metaMakerCenterTab.add(new GBIF.MetaMaker.ExtensionPanel({id:"extension-"+node.id,title:node.text,type:'ext',skip:false}));this.metaMakerCenterTab.setActiveTab("extension-"+node.id);node.expand();}}else{this.metaMakerCenterTab.hideTabStripItem("extension-"+node.id);this.metaMakerCenterTab.getComponent("extension-"+node.id).skip=true;if(this.metaMakerCenterTab.getActiveTab().id=="meta"){this.metaMakerCenterTab.checkTab(this.metaMakerCenterTab,this.metaMakerCenterTab.getComponent("meta"));}else{this.metaMakerCenterTab.setActiveTab("meta");}}
break;case'attribute':var prefix=node.parentNode.attributes.type;if(!node.parentNode.attributes.checked){node.parentNode.getUI().toggleCheck();}
var tmpTab=this.metaMakerCenterTab.findById(prefix+"-"+node.parentNode.id);if(tmpTab){this.metaMakerCenterTab.unhideTabStripItem(prefix+"-"+node.parentNode.id);this.metaMakerCenterTab.setActiveTab(prefix+"-"+node.parentNode.id);}else{tmpTab=new GBIF.MetaMaker.ExtensionPanel({id:"ext-"+node.parentNode.id,title:node.parentNode.text,type:'ext'});this.metaMakerCenterTab.add(tmpTab);this.metaMakerCenterTab.setActiveTab(tmpTab.id);}
if(state){tmpTab.extension.store.loadData([[node.attributes.term,"string",true]],true);}else{var index=tmpTab.extension.store.find("term",node.attributes.term);if(index>=0){tmpTab.extension.store.remove(tmpTab.extension.store.getAt(index));}}
break;default:break;}}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.CenterTab=function(config){this.metaPanel=new GBIF.MetaMaker.MetaPanel();this.coreSpecimensPanel=new GBIF.MetaMaker.ExtensionPanel({id:'core-specimens',title:'Specimens',type:'core',skip:false});this.coreObservationsPanel=new GBIF.MetaMaker.ExtensionPanel({id:'core-observations',title:'Observations',type:'core',skip:true});Ext.apply(this,config,{width:400,height:400,activeTab:0,items:[this.metaPanel,this.coreSpecimensPanel,this.coreObservationsPanel],listeners:{tabchange:this.checkTab,render:function(){this.hideTabStripItem("core-observations");}}});GBIF.MetaMaker.CenterTab.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.CenterTab,Ext.TabPanel,{checkTab:function(tp,panel){if(panel){switch(panel.type){case'meta':panel.metaData.core=[];panel.metaData.extensions=[];tp.items.each(function(tab){if(!tab.skip){if(tab.type=='ext'){var tmpRec={name:tab.title,filename:tab.extension.filename.getValue(),fileSettings:tab.fileSettings.prop.getSource(),fields:[]}
tab.extension.store.each(function(rec){tmpRec.fields.push({term:rec.data.term});});panel.metaData.extensions.push(tmpRec);delete(tmpRec);panel.generateXML();}
if(tab.type=='core'){var tmpProp=tab.fileSettings.prop.getSource();if(Ext.isEmpty(tmpProp)){tmpProp={foo:"bar","Field Delimiter":"\\t"}}
var tmpRec={name:tab.title,filename:tab.extension.filename.getValue(),fileSettings:tmpProp,fields:[]}
tab.extension.store.each(function(rec){tmpRec.fields.push({term:rec.data.term});});panel.metaData.core.push(tmpRec);delete(tmpRec);panel.generateXML();}}});break;default:break;}}}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.Details=function(config){Ext.apply(this,config,{height:100,title:'Details',split:true,padding:10,border:false})
GBIF.MetaMaker.Details.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.Details,Ext.Panel,{});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.Extension=function(config){var store=new Ext.data.ArrayStore({fields:[{name:'term'},{name:'dataType'},{name:'required'},{name:'static'}]});this.filename=new Ext.form.TextField({width:250});Ext.apply(this,config,{store:store,columns:[{header:'Term',width:160,sortable:true,dataIndex:'term'},{header:'Static/Variable Mapping',width:200,dataIndex:'static',editor:new Ext.form.TextField()}],stripeRows:true,tbar:[{text:'Add Spacer',handler:this.addSpacer,scope:this},"->","Filename:",this.filename],autoScroll:true,clicksToEdit:1,listeners:{render:function(g){var ddrow=new Ext.ux.dd.GridReorderDropTarget(g,{copy:false,listeners:{beforerowmove:function(objThis,oldIndex,newIndex,records){},afterrowmove:function(objThis,oldIndex,newIndex,records){},beforerowcopy:function(objThis,oldIndex,newIndex,records){},afterrowcopy:function(objThis,oldIndex,newIndex,records){}}});Ext.dd.ScrollManager.register(g.getView().getEditorParent());},beforedestroy:function(g){Ext.dd.ScrollManager.unregister(g.getView().getEditorParent());},beforeedit:function(e){if(e.record.data.term=="Spacer"){return(false);}}}});GBIF.MetaMaker.Extension.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.Extension,Ext.grid.EditorGridPanel,{addSpacer:function(){this.store.loadData([["Spacer","",false]],true);}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.ExtensionPanel=function(config){this.fileSettings=new GBIF.MetaMaker.FileSettings({region:'east',width:250,minWidth:250,maxWidth:250,split:true},this);this.extension=new GBIF.MetaMaker.Extension({region:'center'},this);Ext.apply(this,config,{layout:'border',defaults:{border:false},items:[this.fileSettings,this.extension]});GBIF.MetaMaker.ExtensionPanel.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.ExtensionPanel,Ext.Panel,{});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.ExtensionsTree=function(config){Ext.apply(this,config,{root:new Ext.tree.AsyncTreeNode({text:'Root Node',draggable:false,expanded:true,type:'root',children:[{text:'Core',type:'root',expanded:true,iconCls:'iconBook',children:[{text:'Specimens',id:'specimens',leaf:false,checked:true,type:'core',url:'http://rs.gbif.org/core/dwc_taxon.xml'},{text:'Occurrences',id:'occurrences',leaf:false,checked:false,type:'core',url:'http://rs.gbif.org/core/dwc_occurrence.xml'}]},{text:'Extensions',type:'root',expanded:true,iconCls:'iconBook'}]}),useArrows:true,rootVisible:false,autoScroll:true,loader:new Ext.tree.TreeLoader({dataUrl:'resources/api/proxy.php?url=http://gbrds.gbif.org/registry/ipt/extensions.json&type=json',listeners:{beforeload:this.testNodeUri,scope:this},processResponse:this.extensionsResponse})});GBIF.MetaMaker.ExtensionsTree.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.ExtensionsTree,Ext.tree.TreePanel,{testNodeUri:function(loader,node){switch(node.attributes.type){case'root':break;case'core':case'extension':loader.dataUrl='resources/api/proxy.php?url='+node.attributes.url;loader.processResponse=this.extensionResponse;break;}},toggleCore:function(id){var old="";this.suspendEvents();if(id=='specimens'){this.getNodeById('occurrences').getUI().toggleCheck();old="occurrences";}else{this.getNodeById('specimens').getUI().toggleCheck();old="specimens";}
this.resumeEvents();return(old);},extensionsResponse:function(response,node,callback){var json=response.responseText;try{var o=eval("("+json+")");o=o.extensions;node.beginUpdate();for(var i=0,len=o.length;i<len;i++){var n=this.createNode(o[i]);n.text=o[i].title;n.leaf=false;n.attributes.type='extension';n.attributes.checked=false;n.iconCls='iconText';if(n){node.appendChild(n);}}
node.endUpdate();if(typeof callback=="function"){callback(this,node);}}catch(e){alert('Error',"Load Exception Please Try Again.");}},extensionResponse:function(response,node,callback){var xml=response.responseXML;var root=xml.documentElement;var q=Ext.DomQuery;Ext.each(q.select("property",root),function(record){node.beginUpdate();var n=this.createNode({});n.text=record.getAttribute("name");n.leaf=true;n.attributes.type='attribute';n.attributes.term=record.getAttribute("name");n.attributes.namespace=record.getAttribute("namespace");n.attributes.qualName=record.getAttribute("qualName");n.attributes.thesaurus=record.getAttribute("thesaurus");n.attributes.checked=false;n.iconCls='iconText';if(n){node.appendChild(n);}
node.endUpdate();if(typeof callback=="function"){callback(this,node);}},this);}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.FileSettings=function(config){this.prop=new GBIF.MetaMaker.Properties({autoHeight:true,style:'border-top: solid thin;'});Ext.apply(this,config,{defaults:{border:false},items:[{xtype:'fieldset',defaultType:'radio',defaults:{handler:this.changeProp,scope:this},items:[{checked:true,fieldLabel:'File Settings',boxLabel:'CSV File',name:'format',inputValue:'csv'},{fieldLabel:'',labelSeparator:'',boxLabel:'Tab Separated File',name:'format',inputValue:'tab'},{fieldLabel:'',labelSeparator:'',boxLabel:'Custom Format',name:'format',inputValue:'custom'}],listeners:{change:this.changeProp}},this.prop]});GBIF.MetaMaker.FileSettings.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.FileSettings,Ext.form.FormPanel,{changeProp:function(obj,state){if(!state){return;}
switch(obj.inputValue){case'csv':this.prop.setCSV();break;case'tab':this.prop.setTAB();break;default:this.prop.setCustom();break;}}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.MetaPanel=function(config){this.metaData={core:[],extensions:[]};this.filename=new Ext.form.TextField({width:100});Ext.apply(this,config,{height:200,type:'meta',id:'meta',title:'meta.xml',skip:true,iconCls:'iconPageWhiteCode',padding:10,autoScroll:true,border:false,tbar:[{text:"Save File",scope:this,handler:function(){console.log(this.body,this.body.dom.textContent);window.location="resources/api/savefile.php?data="+this.body.dom.textContent;}}],tpl:new Ext.XTemplate('<pre><div class="meta">&lt;?xml version="1.0"?&gt;<br/>','&lt;archive xmlns="http://rs.tdwg.org/dwc/text/"&gt;<br/>','<tpl for="core">','\t&lt;core encoding="{[values.fileSettings["File Encoding"]]}" linesTerminatedBy="{[values.fileSettings["Line ending"]]}" fieldsTerminatedBy="{[values.fileSettings["Filed Delimiter"]]}" fieldsEnclosedBy="{fieldsEnclosedBy}" ignoreHeaderLines="{[values.fileSettings["Ignore header row"]]}" rowType="???"&gt;<br/>','\t\t&lt;files&gt;<br/>','\t\t\t&lt;location>{filename}&lt;/location&gt;<br/>','\t\t&lt;/files&gt;<br/>','<tpl for="fields">','<tpl if="xindex == 1">','\t\t&lt;coreid index="{#}"/&gt;<br/>','</tpl>','<tpl if="xindex &gt; 1">','\t\t&lt;field index="{#}" term="{term}"/&gt;<br/>','</tpl>','</tpl>','\t&lt;/core&gt;<br/>','</tpl>','<tpl for="extensions">','\t&lt;extension encoding="{[values.fileSettings["File Encoding"]]}" linesTerminatedBy="{[values.fileSettings["Line ending"]]}" fieldsTerminatedBy="{[values.fileSettings["Filed Delimiter"]]}" fieldsEnclosedBy="{fieldsEnclosedBy}" ignoreHeaderLines="{[values.fileSettings["Ignore header row"]]}" rowType="???"&gt;<br/>','\t\t&lt;files&gt;<br/>','\t\t\t&lt;location>{filename}&lt;/location&gt;<br/>','\t\t&lt;/files&gt;<br/>','\t\t&lt;coreid index="0"/&gt;<br/>','<tpl for="fields">','<tpl if="term != \'Spacer\'">','\t\t&lt;field index="{#}" term="{term}"/&gt;<br/>','</tpl>','</tpl>','\t&lt;/extension&gt;<br/>','</tpl>','&lt;/archive&gt;<br/>','</div>',{exists:function(o){return typeof o!='undefined'&&o!=null&&o!='';}}),listeners:{}})
GBIF.MetaMaker.MetaPanel.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.MetaPanel,Ext.Panel,{generateXML:function(){this.tpl.overwrite(this.body,this.metaData);}});

Ext.namespace('GBIF');Ext.namespace('GBIF.MetaMaker');GBIF.MetaMaker.Properties=function(config){editable:true;Ext.apply(this,config,{source:{'File Encoding':'UTF-8','Field Delimiter':'\\t','Fields enclosed by':'\"\"','Line ending':'\\r\\n','Ignore header row':true},listeners:{beforeedit:function(e){return(this.editable);switch(e.record.id){default:return true;}}}});GBIF.MetaMaker.Properties.superclass.constructor.call(this,config);}
Ext.extend(GBIF.MetaMaker.Properties,Ext.grid.PropertyGrid,{setCSV:function(){this.setSource({'File Encoding':'UTF-8','Field Delimiter':',','Fields enclosed by':'\"\"','Line ending':'\\n','Ignore header row':true});this.editable=false;},setTAB:function(){this.setSource({'File Encoding':'UTF-8','Field Delimiter':'\\t','Fields enclosed by':'\"\"','Line ending':'\\r\\n','Ignore header row':true});this.editable=false;},setCustom:function(){this.setSource({'File Encoding':'UTF-8','Field Delimiter':'','Fields enclosed by':'','Line ending':'','Ignore header row':true});this.editable=true;}});

Ext.namespace('GBIF');Ext.onReady(function(){Ext.fly(document.body).on('contextmenu',function(e,target){e.preventDefault();});Ext.QuickTips.init();Ext.getUrlParam=function(param){var params=Ext.urlDecode(location.search.substring(1));return param?params[param]:params;};this.header={height:95,cls:'glossary-header',region:'north',xtype:'box',border:false,margins:'0 0 5 0',html:'<div class="header">'+'<a href="http://www.gbif.org/" target="_blank" class="gbif">'+'<img src="resources/images/gbif.jpg" alt="GBif" width="104" height="90" border="0" /></a>'+'<div class="header-text">'+'<h1>MetaMaker v1.0</h1>'+'<p><i>GBIF metafile creation and validation tool</i></p>'+'</div></div>'}
this.center=new GBIF.MetaMaker.Center({region:'center'});this.details=new GBIF.MetaMaker.Details({region:'south'});var mainEntry=new Ext.Viewport({layout:'border',items:[this.header,this.center]});Ext.get('loading').remove();Ext.get('loading-mask').fadeOut({remove:true});});
